{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/User.module.css","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users/selector.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","Paginator","totalItemsCount","currentItem","onClick","itemsPortionSize","useState","Math","ceil","currentPortion","setCurrentPortion","pagesBar","totalCountPortion","leftNumberItemOfPortion","rightNumberItemOfPortion","min","i","push","className","classes","pages__item","pages__item_selected","undefined","pages","prevState","pages__items","User","props","id","name","status","photos","followed","isTogglingFollowUsers","follow","unfollow","to","src","small","emptyAvatar","alt","avatar","disabled","some","togglingId","Users","users","usersCount","pageSize","currentPage","isFetching","onPageChanged","countPages","Preloader","map","userData","getUsersState","state","usersPage","getUsersCountState","getPageSizeState","getCurrentPageState","getIsFetchingState","getIsTogglingFollowUsersState","methods","getUsers","connector","connect","UsersContainer","this","loadUsers","page","bind","React","Component"],"mappings":"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","file":"static/js/4.f0e861be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__-gSlO\",\"pages__items\":\"Paginator_pages__items__2ZSJf\",\"pages__item\":\"Paginator_pages__item__2lxjN\",\"pages__item_selected\":\"Paginator_pages__item_selected__zve6x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__1dq8C\"};","import classes from './Paginator.module.css';\r\nimport React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  totalItemsCount: number;\r\n  currentItem: number;\r\n  onClick: (i: number) => void;\r\n  itemsPortionSize?: number;\r\n}\r\n\r\nconst Paginator: React.FC<Props> = ({ totalItemsCount, currentItem, onClick, itemsPortionSize = 10 }) => {\r\n  const [currentPortion, setCurrentPortion] = useState(Math.ceil((currentItem + 1) / itemsPortionSize));\r\n  const pagesBar                            = [];\r\n  const totalCountPortion                   = Math.ceil(totalItemsCount / itemsPortionSize);\r\n  const leftNumberItemOfPortion             = itemsPortionSize * (currentPortion - 1);\r\n  const rightNumberItemOfPortion            = Math.min(itemsPortionSize * currentPortion, totalItemsCount) - 1;\r\n\r\n  const handleClickPrev = () => {\r\n    setCurrentPortion((prevState => prevState - 1));\r\n  };\r\n\r\n  const handleClickNext = () => {\r\n    setCurrentPortion((prevState => prevState + 1));\r\n  };\r\n\r\n  for (let i = leftNumberItemOfPortion; i <= rightNumberItemOfPortion; i++) {\r\n    pagesBar.push(\r\n      <li\r\n        key={i}\r\n        className={`${classes.pages__item} ${currentItem === i\r\n                                             ? classes.pages__item_selected\r\n                                             : undefined}`}\r\n        onClick={() => onClick(i)}>\r\n        {i + 1}\r\n      </li>,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.pages}>\r\n      {currentPortion > 1 && <button onClick={handleClickPrev}>Prev</button>}\r\n      <nav>\r\n        <ul className={classes.pages__items}>\r\n          {pagesBar}\r\n        </ul>\r\n      </nav>\r\n      {currentPortion < totalCountPortion && <button onClick={handleClickNext}>Next</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { NavLink } from 'react-router-dom';\r\nimport emptyAvatar from '../../images/empty_avatar.svg';\r\nimport classes from './User.module.css';\r\nimport React from 'react';\r\nimport { UserType as UserInterface } from '../../types';\r\n\r\ninterface Props extends UserInterface {\r\n  isTogglingFollowUsers: string[];\r\n  follow: (id: string) => void;\r\n  unfollow: (id: string) => void;\r\n}\r\n\r\nconst User: React.FC<Props> = (props) => {\r\n  const { id, name, status, photos, followed, isTogglingFollowUsers, follow, unfollow } = props;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NavLink to={`/profile/${id}`}>\r\n          <img src={photos.small || emptyAvatar} alt=\"avatar\" className={classes.avatar}/>\r\n        </NavLink>\r\n        {!followed\r\n         ? <button disabled={isTogglingFollowUsers.some(togglingId => togglingId === id)}\r\n                   onClick={() => {\r\n                     follow(id);\r\n                   }}>Follow</button>\r\n         : <button disabled={isTogglingFollowUsers.some(togglingId => togglingId === id)}\r\n                   onClick={() => {\r\n                     unfollow(id);\r\n                   }}>Unfollow</button>}\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <p>{name}</p>\r\n          <p>{status}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\nimport { InitialState as UsersInitialState } from '../../redux/users/reducer';\r\n\r\ninterface Props extends UsersInitialState {\r\n  onPageChanged: (i: number) => void;\r\n  follow: (id: string) => void;\r\n  unfollow: (id: string) => void;\r\n}\r\n\r\nconst Users: React.FC<Props> = (props) => {\r\n  const {\r\n          users,\r\n          usersCount,\r\n          pageSize,\r\n          currentPage,\r\n          isFetching,\r\n          isTogglingFollowUsers,\r\n          onPageChanged,\r\n          follow,\r\n          unfollow,\r\n        } = props;\r\n\r\n  const countPages        = usersCount / pageSize;\r\n  const handleClickOnPage = (i: number) => {\r\n    onPageChanged(i);\r\n  };\r\n\r\n  return (\r\n    isFetching\r\n    ? <Preloader/>\r\n    : <div>\r\n      <Paginator currentItem={currentPage} totalItemsCount={countPages} onClick={handleClickOnPage}/>\r\n      <ul>\r\n        {\r\n          users.map((userData) => (\r\n            <li key={userData.id}>\r\n              <User {...userData}\r\n                    isTogglingFollowUsers={isTogglingFollowUsers}\r\n                    follow={follow}\r\n                    unfollow={unfollow}/>\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { AppStateType } from '../redux-store';\r\n\r\nexport const getUsersState                 = (state: AppStateType) => state.usersPage.users;\r\nexport const getUsersCountState            = (state: AppStateType) => state.usersPage.usersCount;\r\nexport const getPageSizeState              = (state: AppStateType) => state.usersPage.pageSize;\r\nexport const getCurrentPageState           = (state: AppStateType) => state.usersPage.currentPage;\r\nexport const getIsFetchingState            = (state: AppStateType) => state.usersPage.isFetching;\r\nexport const getIsTogglingFollowUsersState = (state: AppStateType) => state.usersPage.isTogglingFollowUsers;\r\n","import React from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport Users from './Users';\r\nimport { follow, getUsers, InitialState as UsersInitialState, unfollow } from '../../redux/users/reducer';\r\nimport {\r\n  getCurrentPageState,\r\n  getIsFetchingState,\r\n  getIsTogglingFollowUsersState,\r\n  getPageSizeState,\r\n  getUsersCountState,\r\n  getUsersState,\r\n} from '../../redux/users/selector';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ninterface StateProps extends UsersInitialState {\r\n}\r\n\r\ninterface DispatchProps {\r\n  getUsers: (page: number, pageSize: number) => void;\r\n  follow: (id: string) => void;\r\n  unfollow: (id: string) => void;\r\n}\r\n\r\ninterface OwnProps {\r\n}\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst mapStateToProps = (state: AppStateType): StateProps => {\r\n  return {\r\n    users:                 getUsersState(state),\r\n    usersCount:            getUsersCountState(state),\r\n    pageSize:              getPageSizeState(state),\r\n    currentPage:           getCurrentPageState(state),\r\n    isFetching:            getIsFetchingState(state),\r\n    isTogglingFollowUsers: getIsTogglingFollowUsersState(state),\r\n  };\r\n};\r\n\r\nconst methods: DispatchProps = {\r\n  getUsers,\r\n  follow,\r\n  unfollow,\r\n};\r\n\r\nconst connector = connect<StateProps, DispatchProps, OwnProps, AppStateType>(\r\n  mapStateToProps,\r\n  methods,\r\n);\r\n\r\nclass UsersContainer extends React.Component<Props> {\r\n  componentDidMount () {\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers (page = this.props.currentPage) {\r\n    this.props.getUsers(page, this.props.pageSize);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Users\r\n        onPageChanged={this.loadUsers.bind(this)}\r\n        {...this.props}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connector(UsersContainer);\r\n"],"sourceRoot":""}