{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/User.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users/selector.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalItemsCount","currentItem","onClick","itemsPortionSize","useState","Math","ceil","currentPortion","setCurrentPortion","pagesBar","totalCountPortion","leftNumberItemOfPortion","rightNumberItemOfPortion","min","i","push","className","classes","pages__item","pages__item_selected","undefined","pages","prevState","pages__items","User","id","name","status","photos","followed","isTogglingFollowUsers","follow","unfollow","to","src","small","emptyAvatar","alt","avatar","disabled","some","togglingId","Users","users","usersCount","pageSize","currentPage","isFetching","onPageChanged","countPages","Preloader","map","userData","getUsersState","state","usersPage","getUsersCountState","getPageSizeState","getCurrentPageState","getIsFetchingState","getIsTogglingFollowUsersState","UsersContainer","this","loadUsers","page","props","getUsers","bind","React","Component","methods","compose","connect"],"mappings":"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","file":"static/js/4.cbc77018.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__2lkbT\",\"pages__items\":\"Paginator_pages__items__28vGW\",\"pages__item\":\"Paginator_pages__item__1UzoL\",\"pages__item_selected\":\"Paginator_pages__item_selected__ftE1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__2cEdB\"};","import classes from './Paginator.module.css';\r\nimport React, { useState } from 'react';\r\n\r\nconst Paginator = ( { totalItemsCount, currentItem, onClick, itemsPortionSize = 10 } ) => {\r\n  const [currentPortion, setCurrentPortion] = useState( Math.ceil( (currentItem + 1) / itemsPortionSize ) );\r\n  const pagesBar = [];\r\n  const totalCountPortion = Math.ceil( totalItemsCount / itemsPortionSize );\r\n  const leftNumberItemOfPortion = itemsPortionSize * (currentPortion - 1);\r\n  const rightNumberItemOfPortion = Math.min( itemsPortionSize * currentPortion, totalItemsCount ) - 1;\r\n\r\n  const handleClickPrev = () => {\r\n    setCurrentPortion( (prevState => prevState - 1) );\r\n  };\r\n\r\n  const handleClickNext = () => {\r\n    setCurrentPortion( (prevState => prevState + 1) );\r\n  };\r\n\r\n  for ( let i = leftNumberItemOfPortion; i <= rightNumberItemOfPortion; i++ ) {\r\n    pagesBar.push(\r\n      <li\r\n        key={ i }\r\n        className={ `${ classes.pages__item } ${ currentItem === i\r\n                                                 ? classes.pages__item_selected\r\n                                                 : undefined }` }\r\n        onClick={ () => onClick( i ) }>\r\n        { i + 1 }\r\n      </li>,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={ classes.pages }>\r\n      { currentPortion > 1 && <button onClick={ handleClickPrev }>Prev</button> }\r\n      <nav>\r\n        <ul className={ classes.pages__items }>\r\n          { pagesBar }\r\n        </ul>\r\n      </nav>\r\n      { currentPortion < totalCountPortion && <button onClick={ handleClickNext }>Next</button> }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { NavLink } from 'react-router-dom';\r\nimport emptyAvatar from '../../images/empty_avatar.svg';\r\nimport classes from './User.module.css';\r\nimport React from 'react';\r\n\r\nconst User = ( { id, name, status, photos, followed, isTogglingFollowUsers, follow, unfollow } ) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <NavLink to={ `/profile/${ id }` }>\r\n          <img src={ photos.small || emptyAvatar } alt=\"avatar\" className={ classes.avatar }/>\r\n        </NavLink>\r\n        { !followed\r\n          ? <button disabled={ isTogglingFollowUsers.some( togglingId => togglingId === id ) }\r\n                    onClick={ () => {follow( id );} }>Follow</button>\r\n          : <button disabled={ isTogglingFollowUsers.some( togglingId => togglingId === id ) }\r\n                    onClick={ () => {unfollow( id );} }>Unfollow</button> }\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <p>{ name }</p>\r\n          <p>{ status }</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nfunction Users( {\r\n  users,\r\n  usersCount,\r\n  pageSize,\r\n  currentPage,\r\n  isFetching,\r\n  isTogglingFollowUsers,\r\n  onPageChanged,\r\n  follow,\r\n  unfollow,\r\n} ) {\r\n\r\n  const countPages = usersCount / pageSize;\r\n  const handleClickOnPage = ( i ) => {\r\n    onPageChanged( i );\r\n  };\r\n\r\n  return (\r\n    isFetching\r\n    ? <Preloader/>\r\n    : <div>\r\n      <Paginator currentItem={ currentPage } totalItemsCount={ countPages } onClick={ handleClickOnPage }/>\r\n      <ul>\r\n        {\r\n          users.map( ( userData ) => (\r\n            <li key={ userData.id }>\r\n              <User { ...userData }\r\n                    isTogglingFollowUsers={ isTogglingFollowUsers }\r\n                    follow={ follow }\r\n                    unfollow={ unfollow }/>\r\n            </li>\r\n          ) )\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","export const getUsersState = ( state ) => state.usersPage.users;\r\nexport const getUsersCountState = ( state ) => state.usersPage.usersCount;\r\nexport const getPageSizeState = ( state ) => state.usersPage.pageSize;\r\nexport const getCurrentPageState = ( state ) => state.usersPage.currentPage;\r\nexport const getIsFetchingState = ( state ) => state.usersPage.isFetching;\r\nexport const getIsTogglingFollowUsersState = ( state ) => state.usersPage.isTogglingFollowUsers;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { follow, getUsers, unfollow } from '../../redux/users/reducer';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getCurrentPageState,\r\n  getIsFetchingState,\r\n  getIsTogglingFollowUsersState,\r\n  getPageSizeState,\r\n  getUsersCountState,\r\n  getUsersState,\r\n} from '../../redux/users/selector';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers( page = this.props.currentPage ) {\r\n    this.props.getUsers( page, this.props.pageSize );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Users\r\n        onPageChanged={ this.loadUsers.bind( this ) }\r\n        { ...this.props }/>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    users: getUsersState( state ),\r\n    usersCount: getUsersCountState( state ),\r\n    pageSize: getPageSizeState( state ),\r\n    currentPage: getCurrentPageState( state ),\r\n    isFetching: getIsFetchingState( state ),\r\n    isTogglingFollowUsers: getIsTogglingFollowUsersState( state ),\r\n  };\r\n};\r\n\r\nconst methods = {\r\n  getUsers,\r\n  follow,\r\n  unfollow,\r\n};\r\n\r\nexport default compose(\r\n  connect( mapStateToProps, methods ),\r\n)( UsersContainer );\r\n"],"sourceRoot":""}